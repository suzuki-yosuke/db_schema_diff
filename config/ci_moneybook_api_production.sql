ALTER TABLE `ci_moneybook_api_production`.`access_log`;
ALTER TABLE `ci_moneybook_api_production`.`access_token`;
ALTER TABLE `ci_moneybook_api_production`.`account`;
ALTER TABLE `ci_moneybook_api_production`.`account_copies`;
ALTER TABLE `ci_moneybook_api_production`.`account_copy_tokens`;
ALTER TABLE `ci_moneybook_api_production`.`account_data`;
ALTER TABLE `ci_moneybook_api_production`.`account_data_expiry`;
ALTER TABLE `ci_moneybook_api_production`.`account_data_request`;
ALTER TABLE `ci_moneybook_api_production`.`account_ic_card_masters`;
ALTER TABLE `ci_moneybook_api_production`.`account_logs`;
ALTER TABLE `ci_moneybook_api_production`.`account_miscs`;
ALTER TABLE `ci_moneybook_api_production`.`account_pre_registrations`;
ALTER TABLE `ci_moneybook_api_production`.`act_status`;
ALTER TABLE `ci_moneybook_api_production`.`ad_track_info`;
ALTER TABLE `ci_moneybook_api_production`.`additional_request`;
ALTER TABLE `ci_moneybook_api_production`.`admin_mail`;
ALTER TABLE `ci_moneybook_api_production`.`admin_temporary_password_logs`;
ALTER TABLE `ci_moneybook_api_production`.`admin_user`;
ALTER TABLE `ci_moneybook_api_production`.`admin_user_email_modification_logs`;
ALTER TABLE `ci_moneybook_api_production`.`advertisement`;
ALTER TABLE `ci_moneybook_api_production`.`advertising_id_accounts`;
ALTER TABLE `ci_moneybook_api_production`.`affiliate`;
ALTER TABLE `ci_moneybook_api_production`.`affiliate_conversions`;
ALTER TABLE `ci_moneybook_api_production`.`aggre_log`;
ALTER TABLE `ci_moneybook_api_production`.`aggre_override`;
ALTER TABLE `ci_moneybook_api_production`.`aggre_overwrite`;
ALTER TABLE `ci_moneybook_api_production`.`aggre_proxy`;
ALTER TABLE `ci_moneybook_api_production`.`aggre_queue`;
ALTER TABLE `ci_moneybook_api_production`.`aggre_skip`;
ALTER TABLE `ci_moneybook_api_production`.`aggregation_queue`;
ALTER TABLE `ci_moneybook_api_production`.`annual_report_housing_cost_rates`;
ALTER TABLE `ci_moneybook_api_production`.`annual_report_ideal_spendings`;
ALTER TABLE `ci_moneybook_api_production`.`app_type`;
ALTER TABLE `ci_moneybook_api_production`.`app_version_ctrl`;
ALTER TABLE `ci_moneybook_api_production`.`article_large_category`;
ALTER TABLE `ci_moneybook_api_production`.`article_middle_category`;
ALTER TABLE `ci_moneybook_api_production`.`article_small_category`;
ALTER TABLE `ci_moneybook_api_production`.`asset_class`;
ALTER TABLE `ci_moneybook_api_production`.`asset_subclass`;
ALTER TABLE `ci_moneybook_api_production`.`auto_category_rule`;
ALTER TABLE `ci_moneybook_api_production`.`auto_charge_partner`;
ALTER TABLE `ci_moneybook_api_production`.`bod_coupon_users`;
ALTER TABLE `ci_moneybook_api_production`.`bod_coupons`;
ALTER TABLE `ci_moneybook_api_production`.`budgets`;
ALTER TABLE `ci_moneybook_api_production`.`bus_station_cybernetic_codes`;
ALTER TABLE `ci_moneybook_api_production`.`calendar`;
ALTER TABLE `ci_moneybook_api_production`.`client_info`;
ALTER TABLE `ci_moneybook_api_production`.`client_info_item`;
ALTER TABLE `ci_moneybook_api_production`.`client_info_item_master`;
ALTER TABLE `ci_moneybook_api_production`.`common_status`;
ALTER TABLE `ci_moneybook_api_production`.`company`;
ALTER TABLE `ci_moneybook_api_production`.`company_affiliate`;
ALTER TABLE `ci_moneybook_api_production`.`company_bank_cost`;
ALTER TABLE `ci_moneybook_api_production`.`company_bank_foreign_deposit`;
ALTER TABLE `ci_moneybook_api_production`.`company_bank_transaction_fee`;
ALTER TABLE `ci_moneybook_api_production`.`company_bank_transaction_fee_atm`;
ALTER TABLE `ci_moneybook_api_production`.`company_campaign`;
ALTER TABLE `ci_moneybook_api_production`.`company_card`;
ALTER TABLE `ci_moneybook_api_production`.`company_card_loan`;
ALTER TABLE `ci_moneybook_api_production`.`company_drv_cost`;
ALTER TABLE `ci_moneybook_api_production`.`company_drv_currency_pair`;
ALTER TABLE `ci_moneybook_api_production`.`company_drv_details`;
ALTER TABLE `ci_moneybook_api_production`.`company_drv_leverage`;
ALTER TABLE `ci_moneybook_api_production`.`company_drv_swap_cost`;
ALTER TABLE `ci_moneybook_api_production`.`company_feature`;
ALTER TABLE `ci_moneybook_api_production`.`company_product`;
ALTER TABLE `ci_moneybook_api_production`.`company_product_review`;
ALTER TABLE `ci_moneybook_api_production`.`company_product_review_criteria`;
ALTER TABLE `ci_moneybook_api_production`.`company_product_review_detail`;
ALTER TABLE `ci_moneybook_api_production`.`company_product_review_detail_rating`;
ALTER TABLE `ci_moneybook_api_production`.`company_product_review_detail_reference`;
ALTER TABLE `ci_moneybook_api_production`.`company_product_review_rating_average`;
ALTER TABLE `ci_moneybook_api_production`.`company_renewal_ranking`;
ALTER TABLE `ci_moneybook_api_production`.`company_renewal_ranking_name`;
ALTER TABLE `ci_moneybook_api_production`.`company_sec_details`;
ALTER TABLE `ci_moneybook_api_production`.`company_sec_line`;
ALTER TABLE `ci_moneybook_api_production`.`company_sec_margin_trade`;
ALTER TABLE `ci_moneybook_api_production`.`company_sec_physical_share`;
ALTER TABLE `ci_moneybook_api_production`.`currency_rates_hst`;
ALTER TABLE `ci_moneybook_api_production`.`cybernetic_code_works`;
ALTER TABLE `ci_moneybook_api_production`.`daily_access_log`;
ALTER TABLE `ci_moneybook_api_production`.`dist`;
ALTER TABLE `ci_moneybook_api_production`.`dist_detail`;
ALTER TABLE `ci_moneybook_api_production`.`dist_status`;
ALTER TABLE `ci_moneybook_api_production`.`ekispert_stations`;
ALTER TABLE `ci_moneybook_api_production`.`electronic_money`;
ALTER TABLE `ci_moneybook_api_production`.`embedded_content`;
ALTER TABLE `ci_moneybook_api_production`.`error`;
ALTER TABLE `ci_moneybook_api_production`.`ex_sub_account_lists`;
ALTER TABLE `ci_moneybook_api_production`.`faq`;
ALTER TABLE `ci_moneybook_api_production`.`faq_category`;
ALTER TABLE `ci_moneybook_api_production`.`feedback`;
ALTER TABLE `ci_moneybook_api_production`.`for_x_application_groups`;
ALTER TABLE `ci_moneybook_api_production`.`for_x_applications`;
ALTER TABLE `ci_moneybook_api_production`.`for_x_media_timeline_filters`;
ALTER TABLE `ci_moneybook_api_production`.`foreign_currency`;
ALTER TABLE `ci_moneybook_api_production`.`ic_card_masters`;
ALTER TABLE `ci_moneybook_api_production`.`institutions`;
ALTER TABLE `ci_moneybook_api_production`.`interest_groups`;
ALTER TABLE `ci_moneybook_api_production`.`interests`;
ALTER TABLE `ci_moneybook_api_production`.`introduce_friends_campaign_invitees`;
ALTER TABLE `ci_moneybook_api_production`.`introduce_friends_campaign_inviters`;
ALTER TABLE `ci_moneybook_api_production`.`introduce_friends_campaign_product_key_types`;
ALTER TABLE `ci_moneybook_api_production`.`introduce_friends_campaigns`;
ALTER TABLE `ci_moneybook_api_production`.`invitation`;
ALTER TABLE `ci_moneybook_api_production`.`invitation_incentive`;
ALTER TABLE `ci_moneybook_api_production`.`keyword`;
ALTER TABLE `ci_moneybook_api_production`.`large_category`;
ALTER TABLE `ci_moneybook_api_production`.`large_category_spending_types`;
ALTER TABLE `ci_moneybook_api_production`.`login_log`;
ALTER TABLE `ci_moneybook_api_production`.`mail_message`;
ALTER TABLE `ci_moneybook_api_production`.`mail_queue`;
ALTER TABLE `ci_moneybook_api_production`.`mail_template`;
ALTER TABLE `ci_moneybook_api_production`.`mail_type`;
ALTER TABLE `ci_moneybook_api_production`.`manetoku_access_logs`;
ALTER TABLE `ci_moneybook_api_production`.`manetoku_categories`;
ALTER TABLE `ci_moneybook_api_production`.`manetoku_categorizations`;
ALTER TABLE `ci_moneybook_api_production`.`manetoku_category_taggings`;
ALTER TABLE `ci_moneybook_api_production`.`media_timeline`;
ALTER TABLE `ci_moneybook_api_production`.`media_timeline_categories`;
ALTER TABLE `ci_moneybook_api_production`.`media_timeline_category_taggings`;
ALTER TABLE `ci_moneybook_api_production`.`media_timeline_fixed_row`;
ALTER TABLE `ci_moneybook_api_production`.`media_timeline_media_timeline_fixed_row`;
ALTER TABLE `ci_moneybook_api_production`.`media_timeline_media_timeline_tag`;
ALTER TABLE `ci_moneybook_api_production`.`media_timeline_tag`;
ALTER TABLE `ci_moneybook_api_production`.`mf_apps_enechange_electric_bill_savings`;
ALTER TABLE `ci_moneybook_api_production`.`mf_free_premium_term_history`;
ALTER TABLE `ci_moneybook_api_production`.`mf_product_key`;
ALTER TABLE `ci_moneybook_api_production`.`mf_product_key_service`;
ALTER TABLE `ci_moneybook_api_production`.`mf_product_key_type`;
ALTER TABLE `ci_moneybook_api_production`.`mf_product_key_type_group`;
ALTER TABLE `ci_moneybook_api_production`.`mf_product_key_type_group_list`;
ALTER TABLE `ci_moneybook_api_production`.`mf_product_key_user`;
ALTER TABLE `ci_moneybook_api_production`.`mfsc_agent`;
ALTER TABLE `ci_moneybook_api_production`.`mfsc_agent_token`;
ALTER TABLE `ci_moneybook_api_production`.`mfsc_service`;
ALTER TABLE `ci_moneybook_api_production`.`mfsc_session`;
ALTER TABLE `ci_moneybook_api_production`.`mfsc_session_account`;
ALTER TABLE `ci_moneybook_api_production`.`middle_category`;
ALTER TABLE `ci_moneybook_api_production`.`monthly_access_log`;
ALTER TABLE `ci_moneybook_api_production`.`naive_bayes_classifiers`;
ALTER TABLE `ci_moneybook_api_production`.`naive_bayes_params`;
ALTER TABLE `ci_moneybook_api_production`.`naive_bayes_statistic`;
ALTER TABLE `ci_moneybook_api_production`.`no_aggre_service`;
ALTER TABLE `ci_moneybook_api_production`.`notification_message`;
ALTER TABLE `ci_moneybook_api_production`.`oauth_access_grants`;
ALTER TABLE `ci_moneybook_api_production`.`oauth_access_tokens`;
ALTER TABLE `ci_moneybook_api_production`.`oauth_applications`;
ALTER TABLE `ci_moneybook_api_production`.`oauth_info`;
ALTER TABLE `ci_moneybook_api_production`.`oauth_openid_requests`
  DROP FOREIGN KEY fk_rails_77114b3b09,
ADD CONSTRAINT fk_rails_77114b3b09 FOREIGN KEY(access_grant_id) REFERENCES `prod_moneybook_api_production`.`oauth_access_grants`(id);
ALTER TABLE `ci_moneybook_api_production`.`office_sub_account_group_list`;
ALTER TABLE `ci_moneybook_api_production`.`pre_registration`;
ALTER TABLE `ci_moneybook_api_production`.`prefecture`;
ALTER TABLE `ci_moneybook_api_production`.`premium_campaigns`;
ALTER TABLE `ci_moneybook_api_production`.`premium_registration_route`;
ALTER TABLE `ci_moneybook_api_production`.`premium_retrial_campaigns`;
ALTER TABLE `ci_moneybook_api_production`.`push_message`;
ALTER TABLE `ci_moneybook_api_production`.`push_notifications`;
ALTER TABLE `ci_moneybook_api_production`.`push_tokens`;
ALTER TABLE `ci_moneybook_api_production`.`real_estate_properties`;
ALTER TABLE `ci_moneybook_api_production`.`real_estate_property_accounts`;
ALTER TABLE `ci_moneybook_api_production`.`report_contents`;
ALTER TABLE `ci_moneybook_api_production`.`saving_means`;
ALTER TABLE `ci_moneybook_api_production`.`search_keyword`;
ALTER TABLE `ci_moneybook_api_production`.`secret_question`;
ALTER TABLE `ci_moneybook_api_production`.`selected_user_intentions`;
ALTER TABLE `ci_moneybook_api_production`.`service`;
ALTER TABLE `ci_moneybook_api_production`.`service_aliases`;
ALTER TABLE `ci_moneybook_api_production`.`service_category`;
ALTER TABLE `ci_moneybook_api_production`.`service_form`;
ALTER TABLE `ci_moneybook_api_production`.`service_form_descriptions`;
ALTER TABLE `ci_moneybook_api_production`.`service_institutions`;
ALTER TABLE `ci_moneybook_api_production`.`service_proxy_override`;
ALTER TABLE `ci_moneybook_api_production`.`service_request`;
ALTER TABLE `ci_moneybook_api_production`.`service_request_form`;
ALTER TABLE `ci_moneybook_api_production`.`service_request_user`;
ALTER TABLE `ci_moneybook_api_production`.`service_statistics_genders`;
ALTER TABLE `ci_moneybook_api_production`.`service_statistics_generals`;
ALTER TABLE `ci_moneybook_api_production`.`service_statistics_generations`;
ALTER TABLE `ci_moneybook_api_production`.`service_statistics_jobs`;
ALTER TABLE `ci_moneybook_api_production`.`service_statistics_prefectures`;
ALTER TABLE `ci_moneybook_api_production`.`service_statistics_rankings`;
ALTER TABLE `ci_moneybook_api_production`.`service_sub_categories`;
ALTER TABLE `ci_moneybook_api_production`.`shops`;
ALTER TABLE `ci_moneybook_api_production`.`spending_means`;
ALTER TABLE `ci_moneybook_api_production`.`spending_target_defaults`;
ALTER TABLE `ci_moneybook_api_production`.`spending_targets`;
ALTER TABLE `ci_moneybook_api_production`.`sso_token`;
ALTER TABLE `ci_moneybook_api_production`.`sub_account`;
ALTER TABLE `ci_moneybook_api_production`.`sub_account_group`;
ALTER TABLE `ci_moneybook_api_production`.`sub_account_group_list`;
ALTER TABLE `ci_moneybook_api_production`.`sugotoku_sessions`;
ALTER TABLE `ci_moneybook_api_production`.`tap_notification_versions`;
ALTER TABLE `ci_moneybook_api_production`.`targeting_result`;
ALTER TABLE `ci_moneybook_api_production`.`targeting_user`;
ALTER TABLE `ci_moneybook_api_production`.`teaser`;
ALTER TABLE `ci_moneybook_api_production`.`top_news`;
ALTER TABLE `ci_moneybook_api_production`.`train_station_cybernetic_codes`;
ALTER TABLE `ci_moneybook_api_production`.`trial_end_dates`;
ALTER TABLE `ci_moneybook_api_production`.`two_step_verification`;
ALTER TABLE `ci_moneybook_api_production`.`universal_queue`;
ALTER TABLE `ci_moneybook_api_production`.`user`;
ALTER TABLE `ci_moneybook_api_production`.`user_asset_act`;
ALTER TABLE `ci_moneybook_api_production`.`user_asset_act_fut`;
ALTER TABLE `ci_moneybook_api_production`.`user_asset_act_institutions`;
ALTER TABLE `ci_moneybook_api_production`.`user_asset_det`;
ALTER TABLE `ci_moneybook_api_production`.`user_asset_det_hst`;
ALTER TABLE `ci_moneybook_api_production`.`user_asset_sum`;
ALTER TABLE `ci_moneybook_api_production`.`user_asset_sum_hst`;
ALTER TABLE `ci_moneybook_api_production`.`user_bill_details`;
ALTER TABLE `ci_moneybook_api_production`.`user_bills`;
ALTER TABLE `ci_moneybook_api_production`.`user_campaign_histories`;
ALTER TABLE `ci_moneybook_api_production`.`user_campaigns`;
ALTER TABLE `ci_moneybook_api_production`.`user_category_rule`;
ALTER TABLE `ci_moneybook_api_production`.`user_channel`;
ALTER TABLE `ci_moneybook_api_production`.`user_cm_influxes`;
ALTER TABLE `ci_moneybook_api_production`.`user_emails`;
ALTER TABLE `ci_moneybook_api_production`.`user_family_members`;
ALTER TABLE `ci_moneybook_api_production`.`user_hash`;
ALTER TABLE `ci_moneybook_api_production`.`user_inquiry`;
ALTER TABLE `ci_moneybook_api_production`.`user_interest_product`;
ALTER TABLE `ci_moneybook_api_production`.`user_interests`;
ALTER TABLE `ci_moneybook_api_production`.`user_mail_status`;
ALTER TABLE `ci_moneybook_api_production`.`user_notification_categories`;
ALTER TABLE `ci_moneybook_api_production`.`user_notification_opening_statuses`;
ALTER TABLE `ci_moneybook_api_production`.`user_notification_parameters`;
ALTER TABLE `ci_moneybook_api_production`.`user_notification_settings`;
ALTER TABLE `ci_moneybook_api_production`.`user_notifications`;
ALTER TABLE `ci_moneybook_api_production`.`user_payment`;
ALTER TABLE `ci_moneybook_api_production`.`user_payment_revocations`;
ALTER TABLE `ci_moneybook_api_production`.`user_permission`;
ALTER TABLE `ci_moneybook_api_production`.`user_permission_account`;
ALTER TABLE `ci_moneybook_api_production`.`user_permission_asset`;
ALTER TABLE `ci_moneybook_api_production`.`user_plan`;
ALTER TABLE `ci_moneybook_api_production`.`user_premium_histories`;
ALTER TABLE `ci_moneybook_api_production`.`user_premium_payments`;
ALTER TABLE `ci_moneybook_api_production`.`user_prereleases`;
ALTER TABLE `ci_moneybook_api_production`.`user_push_device`;
ALTER TABLE `ci_moneybook_api_production`.`user_push_device_permissions`;
ALTER TABLE `ci_moneybook_api_production`.`user_push_notifications`;
ALTER TABLE `ci_moneybook_api_production`.`user_push_setting`;
ALTER TABLE `ci_moneybook_api_production`.`user_recurring_rule`;
ALTER TABLE `ci_moneybook_api_production`.`user_route`;
ALTER TABLE `ci_moneybook_api_production`.`user_service`;
ALTER TABLE `ci_moneybook_api_production`.`user_split_tests`;
ALTER TABLE `ci_moneybook_api_production`.`user_sub_meta`;
ALTER TABLE `ci_moneybook_api_production`.`user_sub_meta_hst`;
ALTER TABLE `ci_moneybook_api_production`.`user_sub_period`;
ALTER TABLE `ci_moneybook_api_production`.`user_sub_period_daily`;
ALTER TABLE `ci_moneybook_api_production`.`user_sub_period_hst`;
ALTER TABLE `ci_moneybook_api_production`.`user_tap_notification_histories`;
ALTER TABLE `ci_moneybook_api_production`.`user_transfer_rule`;
ALTER TABLE `ci_moneybook_api_production`.`user_withdrawal_logs`;
ALTER TABLE `ci_moneybook_api_production`.`withdrawal_feedback`;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`access_token_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.access_token_insert_trigger AFTER INSERT ON ci_moneybook_api_production.access_token FOR EACH ROW BEGIN
  CALL update_log("access_token", "C", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`access_token_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.access_token_update_trigger AFTER UPDATE ON ci_moneybook_api_production.access_token FOR EACH ROW BEGIN
  DECLARE changedFields VARCHAR(2048);
  SET changedFields = '';
  IF NEW.id != OLD.id THEN SET changedFields = concat(changedFields, 'id:', NEW.id, '|'); END IF;
  IF NEW.user_id != OLD.user_id THEN SET changedFields = concat(changedFields, 'user_id:', NEW.user_id, '|'); END IF;
  IF NEW.token != OLD.token THEN SET changedFields = concat(changedFields, 'token:', NEW.token, '|'); END IF;
  IF NEW.last_accessed_at != OLD.last_accessed_at THEN SET changedFields = concat(changedFields, 'last_accessed_at:', NEW.last_accessed_at, '|'); END IF;
  CALL update_log_with_extra("access_token", "U", NEW.user_id, 0, changedFields);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`account_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.account_delete_trigger AFTER DELETE ON ci_moneybook_api_production.account FOR EACH ROW BEGIN
  CALL update_log("account", "D", OLD.user_id, OLD.id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`account_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.account_insert_trigger AFTER INSERT ON ci_moneybook_api_production.account FOR EACH ROW BEGIN
  CALL update_log("account", "C", NEW.user_id, NEW.id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`account_pre_registrations_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.account_pre_registrations_delete_trigger AFTER DELETE ON ci_moneybook_api_production.account_pre_registrations FOR EACH ROW BEGIN
  CALL update_log("account_pre_registrations", "D", OLD.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`account_pre_registrations_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.account_pre_registrations_insert_trigger AFTER INSERT ON ci_moneybook_api_production.account_pre_registrations FOR EACH ROW BEGIN
  CALL update_log("account_pre_registrations", "C", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`account_pre_registrations_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.account_pre_registrations_update_trigger AFTER UPDATE ON ci_moneybook_api_production.account_pre_registrations FOR EACH ROW BEGIN
  CALL update_log("account_pre_registrations", "U", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`account_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.account_update_trigger AFTER UPDATE ON ci_moneybook_api_production.account FOR EACH ROW BEGIN
  DECLARE changedFields VARCHAR(2048);
  SET changedFields = '';
  IF !(NEW.id <=> OLD.id) THEN SET changedFields = concat(changedFields, 'id:', ifnull(NEW.id, ''), '|'); END IF;
  IF !(NEW.user_id <=> OLD.user_id) THEN SET changedFields = concat(changedFields, 'user_id:', ifnull(NEW.user_id, ''), '|'); END IF;
  IF !(NEW.service_id <=> OLD.service_id) THEN SET changedFields = concat(changedFields, 'service_id:', ifnull(NEW.service_id, ''), '|'); END IF;
  IF !(NEW.user_service_id <=> OLD.user_service_id) THEN SET changedFields = concat(changedFields, 'user_service_id:', ifnull(NEW.user_service_id, ''), '|'); END IF;
  IF !(NEW.service_category_id <=> OLD.service_category_id) THEN SET changedFields = concat(changedFields, 'service_category_id:', ifnull(NEW.service_category_id, ''), '|'); END IF;
  IF !(NEW.manual_flag <=> OLD.manual_flag) THEN SET changedFields = concat(changedFields, 'manual_flag:', ifnull(NEW.manual_flag, ''), '|'); END IF;
  IF !(NEW.status <=> OLD.status) THEN SET changedFields = concat(changedFields, 'status:', ifnull(NEW.status, ''), '|'); END IF;
  IF !(NEW.error_id <=> OLD.error_id) THEN SET changedFields = concat(changedFields, 'error_id:', ifnull(NEW.error_id, ''), '|'); END IF;
  IF !(NEW.disp_name <=> OLD.disp_name) THEN SET changedFields = concat(changedFields, 'disp_name:', ifnull(NEW.disp_name, ''), '|'); END IF;
  IF !(NEW.memo <=> OLD.memo) THEN SET changedFields = concat(changedFields, 'memo:', ifnull(NEW.memo, ''), '|'); END IF;
  IF !(NEW.msg_flag <=> OLD.msg_flag) THEN SET changedFields = concat(changedFields, 'msg_flag:', ifnull(NEW.msg_flag, ''), '|'); END IF;
  IF !(NEW.msg_time <=> OLD.msg_time) THEN SET changedFields = concat(changedFields, 'msg_time:', ifnull(NEW.msg_time, ''), '|'); END IF;
  IF !(NEW.account_uid <=> OLD.account_uid) THEN SET changedFields = concat(changedFields, 'account_uid:', ifnull(NEW.account_uid, ''), '|'); END IF;
  IF !(NEW.account_uid_hidden <=> OLD.account_uid_hidden) THEN SET changedFields = concat(changedFields, 'account_uid_hidden:', ifnull(NEW.account_uid_hidden, ''), '|'); END IF;
  IF !(NEW.check_key <=> OLD.check_key) THEN SET changedFields = concat(changedFields, 'check_key:', ifnull(NEW.check_key, ''), '|'); END IF;
  IF !(NEW.last_login_at <=> OLD.last_login_at) THEN SET changedFields = concat(changedFields, 'last_login_at:', ifnull(NEW.last_login_at, ''), '|'); END IF;
  IF !(NEW.first_succeeded_at <=> OLD.first_succeeded_at) THEN SET changedFields = concat(changedFields, 'first_succeeded_at:', ifnull(NEW.first_succeeded_at, ''), '|'); END IF;
  IF !(NEW.last_succeeded_at <=> OLD.last_succeeded_at) THEN SET changedFields = concat(changedFields, 'last_succeeded_at:', ifnull(NEW.last_succeeded_at, ''), '|'); END IF;
  IF !(NEW.last_aggregated_at <=> OLD.last_aggregated_at) THEN SET changedFields = concat(changedFields, 'last_aggregated_at:', ifnull(NEW.last_aggregated_at, ''), '|'); END IF;
  IF !(NEW.next_aggregate_at <=> OLD.next_aggregate_at) THEN SET changedFields = concat(changedFields, 'next_aggregate_at:', ifnull(NEW.next_aggregate_at, ''), '|'); END IF;
  IF !(NEW.aggre_span <=> OLD.aggre_span) THEN SET changedFields = concat(changedFields, 'aggre_span:', ifnull(NEW.aggre_span, ''), '|'); END IF;
  IF !(NEW.aggre_start_date <=> OLD.aggre_start_date) THEN SET changedFields = concat(changedFields, 'aggre_start_date:', ifnull(NEW.aggre_start_date, ''), '|'); END IF;
  IF !(NEW.message <=> OLD.message) THEN SET changedFields = concat(changedFields, 'message:', ifnull(NEW.message, ''), '|'); END IF;
  IF !(NEW.assist_account_id <=> OLD.assist_account_id) THEN SET changedFields = concat(changedFields, 'assist_account_id:', ifnull(NEW.assist_account_id, ''), '|'); END IF;
  IF !(NEW.assist_sub_account_id <=> OLD.assist_sub_account_id) THEN SET changedFields = concat(changedFields, 'assist_sub_account_id:', ifnull(NEW.assist_sub_account_id, ''), '|'); END IF;
  IF !(NEW.assist_target_det_id <=> OLD.assist_target_det_id) THEN SET changedFields = concat(changedFields, 'assist_target_det_id:', ifnull(NEW.assist_target_det_id, ''), '|'); END IF;
  IF !(NEW.override_proxy_tag <=> OLD.override_proxy_tag) THEN SET changedFields = concat(changedFields, 'override_proxy_tag:', ifnull(NEW.override_proxy_tag, ''), '|'); END IF;
  IF !(NEW.is_demo <=> OLD.is_demo) THEN SET changedFields = concat(changedFields, 'is_demo:', ifnull(NEW.is_demo, ''), '|'); END IF;
  IF !(NEW.is_suspended <=> OLD.is_suspended) THEN SET changedFields = concat(changedFields, 'is_suspended:', ifnull(NEW.is_suspended, ''), '|'); END IF;
  IF !(NEW.created_at <=> OLD.created_at) THEN SET changedFields = concat(changedFields, 'created_at:', ifnull(NEW.created_at, ''), '|'); END IF;
  IF !(NEW.withdrawal <=> OLD.withdrawal) THEN SET changedFields = concat(changedFields, 'withdrawal:', ifnull(NEW.withdrawal, ''), '|'); END IF;
  IF !(NEW.deleted_at <=> OLD.deleted_at) THEN SET changedFields = concat(changedFields, 'deleted_at:', ifnull(NEW.deleted_at, ''), '|'); END IF;
  IF (length(changedFields) > 0) THEN
    CALL update_log_with_extra("account", "U", NEW.user_id, NEW.id, changedFields);
  END IF;
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`sub_account_group_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.sub_account_group_delete_trigger AFTER DELETE ON ci_moneybook_api_production.sub_account_group FOR EACH ROW BEGIN
  CALL update_log("sub_account_group", "D", OLD.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`sub_account_group_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.sub_account_group_insert_trigger AFTER INSERT ON ci_moneybook_api_production.sub_account_group FOR EACH ROW BEGIN
  CALL update_log("sub_account_group", "C", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`sub_account_group_list_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.sub_account_group_list_delete_trigger AFTER DELETE ON ci_moneybook_api_production.sub_account_group_list FOR EACH ROW BEGIN
  CALL update_log("sub_account_group_list", "D", OLD.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`sub_account_group_list_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.sub_account_group_list_insert_trigger AFTER INSERT ON ci_moneybook_api_production.sub_account_group_list FOR EACH ROW BEGIN
  CALL update_log("sub_account_group_list", "C", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`sub_account_group_list_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.sub_account_group_list_update_trigger AFTER UPDATE ON ci_moneybook_api_production.sub_account_group_list FOR EACH ROW BEGIN
  CALL update_log("sub_account_group_list", "U", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`sub_account_group_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.sub_account_group_update_trigger AFTER UPDATE ON ci_moneybook_api_production.sub_account_group FOR EACH ROW BEGIN
  CALL update_log("sub_account_group", "U", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_act_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_act_delete_trigger AFTER DELETE ON ci_moneybook_api_production.user_asset_act FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_act", "D", OLD.user_id, OLD.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_act_fut_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_act_fut_delete_trigger AFTER DELETE ON ci_moneybook_api_production.user_asset_act_fut FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_act_fut", "D", OLD.user_id, OLD.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_act_fut_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_act_fut_insert_trigger AFTER INSERT ON ci_moneybook_api_production.user_asset_act_fut FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_act_fut", "C", NEW.user_id, NEW.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_act_fut_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_act_fut_update_trigger AFTER UPDATE ON ci_moneybook_api_production.user_asset_act_fut FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_act_fut", "U", NEW.user_id, NEW.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_act_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_act_insert_trigger AFTER INSERT ON ci_moneybook_api_production.user_asset_act FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_act", "C", NEW.user_id, NEW.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_act_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_act_update_trigger AFTER UPDATE ON ci_moneybook_api_production.user_asset_act FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_act", "U", NEW.user_id, NEW.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_det_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_det_delete_trigger AFTER DELETE ON ci_moneybook_api_production.user_asset_det FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_det", "D", OLD.user_id, OLD.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_det_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_det_insert_trigger AFTER INSERT ON ci_moneybook_api_production.user_asset_det FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_det", "C", NEW.user_id, NEW.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_det_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_det_update_trigger AFTER UPDATE ON ci_moneybook_api_production.user_asset_det FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_det", "U", NEW.user_id, NEW.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_sum_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_sum_delete_trigger AFTER DELETE ON ci_moneybook_api_production.user_asset_sum FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_sum", "D", OLD.user_id, OLD.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_sum_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_sum_insert_trigger AFTER INSERT ON ci_moneybook_api_production.user_asset_sum FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_sum", "C", NEW.user_id, NEW.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_asset_sum_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_asset_sum_update_trigger AFTER UPDATE ON ci_moneybook_api_production.user_asset_sum FOR EACH ROW BEGIN
  CALL update_log_when_manual_account("user_asset_sum", "U", NEW.user_id, NEW.account_id);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_delete_trigger AFTER DELETE ON ci_moneybook_api_production.user FOR EACH ROW BEGIN
  CALL update_log("user", "D", OLD.id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_insert_trigger AFTER INSERT ON ci_moneybook_api_production.user FOR EACH ROW BEGIN
  CALL update_log("user", "C", NEW.id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_tap_notification_histories_delete_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_tap_notification_histories_delete_trigger AFTER DELETE ON ci_moneybook_api_production.user_tap_notification_histories FOR EACH ROW BEGIN
  CALL update_log("user_tap_notification_histories", "D", OLD.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_tap_notification_histories_insert_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_tap_notification_histories_insert_trigger AFTER INSERT ON ci_moneybook_api_production.user_tap_notification_histories FOR EACH ROW BEGIN
  CALL update_log("user_tap_notification_histories", "C", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_tap_notification_histories_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_tap_notification_histories_update_trigger AFTER UPDATE ON ci_moneybook_api_production.user_tap_notification_histories FOR EACH ROW BEGIN
  CALL update_log("user_tap_notification_histories", "U", NEW.user_id, 0);
END;
DROP TRIGGER IF EXISTS `ci_moneybook_api_production`.`user_update_trigger`;
CREATE DEFINER=prodfdb_update@localhost TRIGGER ci_moneybook_api_production.user_update_trigger AFTER UPDATE ON ci_moneybook_api_production.user FOR EACH ROW BEGIN
  DECLARE changedFields VARCHAR(2048);
  SET changedFields = '';
  IF !(NEW.id <=> OLD.id) THEN SET changedFields = concat(changedFields, 'id:', ifnull(NEW.id, ''), '|'); END IF;
  IF !(NEW.identification_code <=> OLD.identification_code) THEN SET changedFields = concat(changedFields, 'identification_code:', ifnull(NEW.identification_code, ''), '|'); END IF;
  IF !(NEW.email <=> OLD.email) THEN SET changedFields = concat(changedFields, 'email:', ifnull(NEW.email, ''), '|'); END IF;
  IF !(NEW.encrypted_password <=> OLD.encrypted_password) THEN SET changedFields = concat(changedFields, 'encrypted_password:', ifnull(NEW.encrypted_password, ''), '|'); END IF;
  IF !(NEW.sign_in_count <=> OLD.sign_in_count) THEN SET changedFields = concat(changedFields, 'sign_in_count:', ifnull(NEW.sign_in_count, ''), '|'); END IF;
  IF !(NEW.created_at <=> OLD.created_at) THEN SET changedFields = concat(changedFields, 'created_at:', ifnull(NEW.created_at, ''), '|'); END IF;
  IF !(NEW.updated_at <=> OLD.updated_at) THEN SET changedFields = concat(changedFields, 'updated_at:', ifnull(NEW.updated_at, ''), '|'); END IF;
  IF !(NEW.birth_year <=> OLD.birth_year) THEN SET changedFields = concat(changedFields, 'birth_year:', ifnull(NEW.birth_year, ''), '|'); END IF;
  IF !(NEW.name <=> OLD.name) THEN SET changedFields = concat(changedFields, 'name:', ifnull(NEW.name, ''), '|'); END IF;
  IF !(NEW.name_uniqueness <=> OLD.name_uniqueness) THEN SET changedFields = concat(changedFields, 'name_uniqueness:', ifnull(NEW.name_uniqueness, ''), '|'); END IF;
  IF !(NEW.prefecture_id <=> OLD.prefecture_id) THEN SET changedFields = concat(changedFields, 'prefecture_id:', ifnull(NEW.prefecture_id, ''), '|'); END IF;
  IF !(NEW.zip <=> OLD.zip) THEN SET changedFields = concat(changedFields, 'zip:', ifnull(NEW.zip, ''), '|'); END IF;
  IF !(NEW.email_uniqueness <=> OLD.email_uniqueness) THEN SET changedFields = concat(changedFields, 'email_uniqueness:', ifnull(NEW.email_uniqueness, ''), '|'); END IF;
  IF !(NEW.lower_email_hash <=> OLD.lower_email_hash) THEN SET changedFields = concat(changedFields, 'lower_email_hash:', ifnull(NEW.lower_email_hash, ''), '|'); END IF;
  IF !(NEW.icon <=> OLD.icon) THEN SET changedFields = concat(changedFields, 'icon:', ifnull(NEW.icon, ''), '|'); END IF;
  IF !(NEW.email_hidden <=> OLD.email_hidden) THEN SET changedFields = concat(changedFields, 'email_hidden:', ifnull(NEW.email_hidden, ''), '|'); END IF;
  IF !(NEW.deleted_at <=> OLD.deleted_at) THEN SET changedFields = concat(changedFields, 'deleted_at:', ifnull(NEW.deleted_at, ''), '|'); END IF;
  IF !(NEW.gender <=> OLD.gender) THEN SET changedFields = concat(changedFields, 'gender:', ifnull(NEW.gender, ''), '|'); END IF;
  IF !(NEW.family_structure <=> OLD.family_structure) THEN SET changedFields = concat(changedFields, 'family_structure:', ifnull(NEW.family_structure, ''), '|'); END IF;
  IF !(NEW.living_arrangement <=> OLD.living_arrangement) THEN SET changedFields = concat(changedFields, 'living_arrangement:', ifnull(NEW.living_arrangement, ''), '|'); END IF;
  IF !(NEW.job <=> OLD.job) THEN SET changedFields = concat(changedFields, 'job:', ifnull(NEW.job, ''), '|'); END IF;
  IF !(NEW.twitter_handle <=> OLD.twitter_handle) THEN SET changedFields = concat(changedFields, 'twitter_handle:', ifnull(NEW.twitter_handle, ''), '|'); END IF;
  IF !(NEW.url <=> OLD.url) THEN SET changedFields = concat(changedFields, 'url:', ifnull(NEW.url, ''), '|'); END IF;
  IF !(NEW.comment <=> OLD.comment) THEN SET changedFields = concat(changedFields, 'comment:', ifnull(NEW.comment, ''), '|'); END IF;
  IF !(NEW.annual_income <=> OLD.annual_income) THEN SET changedFields = concat(changedFields, 'annual_income:', ifnull(NEW.annual_income, ''), '|'); END IF;
  IF !(NEW.status <=> OLD.status) THEN SET changedFields = concat(changedFields, 'status:', ifnull(NEW.status, ''), '|'); END IF;
  IF !(NEW.state <=> OLD.state) THEN SET changedFields = concat(changedFields, 'state:', ifnull(NEW.state, ''), '|'); END IF;
  IF !(NEW.last_accessed_at <=> OLD.last_accessed_at) THEN SET changedFields = concat(changedFields, 'last_accessed_at:', ifnull(NEW.last_accessed_at, ''), '|'); END IF;
  IF !(NEW.publicity <=> OLD.publicity) THEN SET changedFields = concat(changedFields, 'publicity:', ifnull(NEW.publicity, ''), '|'); END IF;
  IF !(NEW.mypage_param <=> OLD.mypage_param) THEN SET changedFields = concat(changedFields, 'mypage_param:', ifnull(NEW.mypage_param, ''), '|'); END IF;
  IF !(NEW.asset_modified_at <=> OLD.asset_modified_at) THEN SET changedFields = concat(changedFields, 'asset_modified_at:', ifnull(NEW.asset_modified_at, ''), '|'); END IF;
  IF !(NEW.uid <=> OLD.uid) THEN SET changedFields = concat(changedFields, 'uid:', ifnull(NEW.uid, ''), '|'); END IF;
  IF !(NEW.provider <=> OLD.provider) THEN SET changedFields = concat(changedFields, 'provider:', ifnull(NEW.provider, ''), '|'); END IF;
  IF !(NEW.calc_st_day <=> OLD.calc_st_day) THEN SET changedFields = concat(changedFields, 'calc_st_day:', ifnull(NEW.calc_st_day, ''), '|'); END IF;
  IF !(NEW.calc_st_day_skip_option <=> OLD.calc_st_day_skip_option) THEN SET changedFields = concat(changedFields, 'calc_st_day_skip_option:', ifnull(NEW.calc_st_day_skip_option, ''), '|'); END IF;
  IF !(NEW.lock <=> OLD.lock) THEN SET changedFields = concat(changedFields, 'lock:', ifnull(NEW.lock, ''), '|'); END IF;
  IF !(NEW.lock_limit <=> OLD.lock_limit) THEN SET changedFields = concat(changedFields, 'lock_limit:', ifnull(NEW.lock_limit, ''), '|'); END IF;
  IF !(NEW.free_trial_registered_at <=> OLD.free_trial_registered_at) THEN SET changedFields = concat(changedFields, 'free_trial_registered_at:', ifnull(NEW.free_trial_registered_at, ''), '|'); END IF;
  IF !(NEW.premium_registered_at <=> OLD.premium_registered_at) THEN SET changedFields = concat(changedFields, 'premium_registered_at:', ifnull(NEW.premium_registered_at, ''), '|'); END IF;
  IF !(NEW.latest_free_premium_from <=> OLD.latest_free_premium_from) THEN SET changedFields = concat(changedFields, 'latest_free_premium_from:', ifnull(NEW.latest_free_premium_from, ''), '|'); END IF;
  IF !(NEW.latest_free_premium_to <=> OLD.latest_free_premium_to) THEN SET changedFields = concat(changedFields, 'latest_free_premium_to:', ifnull(NEW.latest_free_premium_to, ''), '|'); END IF;
  IF !(NEW.premium_expires_at <=> OLD.premium_expires_at) THEN SET changedFields = concat(changedFields, 'premium_expires_at:', ifnull(NEW.premium_expires_at, ''), '|'); END IF;
  IF !(NEW.current_group_id <=> OLD.current_group_id) THEN SET changedFields = concat(changedFields, 'current_group_id:', ifnull(NEW.current_group_id, ''), '|'); END IF;
  IF !(NEW.last_cf_checked_at <=> OLD.last_cf_checked_at) THEN SET changedFields = concat(changedFields, 'last_cf_checked_at:', ifnull(NEW.last_cf_checked_at, ''), '|'); END IF;
  IF !(NEW.cf_new_flag <=> OLD.cf_new_flag) THEN SET changedFields = concat(changedFields, 'cf_new_flag:', ifnull(NEW.cf_new_flag, ''), '|'); END IF;
  IF !(NEW.access_token_expire_limit <=> OLD.access_token_expire_limit) THEN SET changedFields = concat(changedFields, 'access_token_expire_limit:', ifnull(NEW.access_token_expire_limit, ''), '|'); END IF;
  IF !(NEW.login_notification <=> OLD.login_notification) THEN SET changedFields = concat(changedFields, 'login_notification:', ifnull(NEW.login_notification, ''), '|'); END IF;
  IF !(NEW.mf_registered_at <=> OLD.mf_registered_at) THEN SET changedFields = concat(changedFields, 'mf_registered_at:', ifnull(NEW.mf_registered_at, ''), '|'); END IF;
  IF !(NEW.mf_withdrew_at <=> OLD.mf_withdrew_at) THEN SET changedFields = concat(changedFields, 'mf_withdrew_at:', ifnull(NEW.mf_withdrew_at, ''), '|'); END IF;
  IF !(NEW.ca_registered_at <=> OLD.ca_registered_at) THEN SET changedFields = concat(changedFields, 'ca_registered_at:', ifnull(NEW.ca_registered_at, ''), '|'); END IF;
  IF !(NEW.ca_withdrew_at <=> OLD.ca_withdrew_at) THEN SET changedFields = concat(changedFields, 'ca_withdrew_at:', ifnull(NEW.ca_withdrew_at, ''), '|'); END IF;
  IF !(NEW.mail_bounce_status <=> OLD.mail_bounce_status) THEN SET changedFields = concat(changedFields, 'mail_bounce_status:', ifnull(NEW.mail_bounce_status, ''), '|'); END IF;
  IF !(NEW.mail_bounce_updated_at <=> OLD.mail_bounce_updated_at) THEN SET changedFields = concat(changedFields, 'mail_bounce_updated_at:', ifnull(NEW.mail_bounce_updated_at, ''), '|'); END IF;
  IF !(NEW.invalid_email <=> OLD.invalid_email) THEN SET changedFields = concat(changedFields, 'invalid_email:', ifnull(NEW.invalid_email, ''), '|'); END IF;
  IF !(NEW.app_type <=> OLD.app_type) THEN SET changedFields = concat(changedFields, 'app_type:', ifnull(NEW.app_type, ''), '|'); END IF;
  IF !(NEW.is_two_step_active <=> OLD.is_two_step_active) THEN SET changedFields = concat(changedFields, 'is_two_step_active:', ifnull(NEW.is_two_step_active, ''), '|'); END IF;
  IF !(NEW.is_email_confirmed <=> OLD.is_email_confirmed) THEN SET changedFields = concat(changedFields, 'is_email_confirmed:', ifnull(NEW.is_email_confirmed, ''), '|'); END IF;
  IF !(NEW.iv_registered_at <=> OLD.iv_registered_at) THEN SET changedFields = concat(changedFields, 'iv_registered_at:', ifnull(NEW.iv_registered_at, ''), '|'); END IF;
  IF !(NEW.iv_withdrew_at <=> OLD.iv_withdrew_at) THEN SET changedFields = concat(changedFields, 'iv_withdrew_at:', ifnull(NEW.iv_withdrew_at, ''), '|'); END IF;
  IF !(NEW.pa_registered_at <=> OLD.pa_registered_at) THEN SET changedFields = concat(changedFields, 'pa_registered_at:', ifnull(NEW.pa_registered_at, ''), '|'); END IF;
  IF !(NEW.pa_withdrew_at <=> OLD.pa_withdrew_at) THEN SET changedFields = concat(changedFields, 'pa_withdrew_at:', ifnull(NEW.pa_withdrew_at, ''), '|'); END IF;
  IF !(NEW.rc_registered_at <=> OLD.rc_registered_at) THEN SET changedFields = concat(changedFields, 'rc_registered_at:', ifnull(NEW.rc_registered_at, ''), '|'); END IF;
  IF !(NEW.rc_withdrew_at <=> OLD.rc_withdrew_at) THEN SET changedFields = concat(changedFields, 'rc_withdrew_at:', ifnull(NEW.rc_withdrew_at, ''), '|'); END IF;
  IF !(NEW.my_registered_at <=> OLD.my_registered_at) THEN SET changedFields = concat(changedFields, 'my_registered_at:', ifnull(NEW.my_registered_at, ''), '|'); END IF;
  IF !(NEW.my_withdrew_at <=> OLD.my_withdrew_at) THEN SET changedFields = concat(changedFields, 'my_withdrew_at:', ifnull(NEW.my_withdrew_at, ''), '|'); END IF;
  IF !(NEW.ex_registered_at <=> OLD.ex_registered_at) THEN SET changedFields = concat(changedFields, 'ex_registered_at:', ifnull(NEW.ex_registered_at, ''), '|'); END IF;
  IF !(NEW.ex_withdrew_at <=> OLD.ex_withdrew_at) THEN SET changedFields = concat(changedFields, 'ex_withdrew_at:', ifnull(NEW.ex_withdrew_at, ''), '|'); END IF;
  IF !(NEW.only_api_user <=> OLD.only_api_user) THEN SET changedFields = concat(changedFields, 'only_api_user:', ifnull(NEW.only_api_user, ''), '|'); END IF;
  IF !(NEW.has_used_two_step <=> OLD.has_used_two_step) THEN SET changedFields = concat(changedFields, 'has_used_two_step:', ifnull(NEW.has_used_two_step, ''), '|'); END IF;
  IF !(NEW.is_limit_aggre_count <=> OLD.is_limit_aggre_count) THEN SET changedFields = concat(changedFields, 'is_limit_aggre_count:', ifnull(NEW.is_limit_aggre_count, ''), '|'); END IF;
  IF !(NEW.preferred_proxy_tag <=> OLD.preferred_proxy_tag) THEN SET changedFields = concat(changedFields, 'preferred_proxy_tag:', ifnull(NEW.preferred_proxy_tag, ''), '|'); END IF;
  IF !(NEW.is_internal <=> OLD.is_internal) THEN SET changedFields = concat(changedFields, 'is_internal:', ifnull(NEW.is_internal, ''), '|'); END IF;
  IF (length(changedFields) > 0) THEN
    CALL update_log_with_extra("user", "U", NEW.id, 0, changedFields);
  END IF;
END;
